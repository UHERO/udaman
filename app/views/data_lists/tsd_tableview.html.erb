<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
		function LoadGoogle() {
        if(typeof google != 'undefined' && google && google.load) {
            google.load("visualization", "1", {packages: ["table"]});
			google.load("visualization", "1", {packages:["corechart"]});
        } else {
            // Retry later...
            setTimeout(LoadGoogle, 30);
        }
    }
    LoadGoogle();
</script>

<style>
/*#chart-board div.tile {float:left; width:400px; height:275px;}*/
span.lighten {color:#AAA;}
</style>

<%
	#summary_series = "E_NF@HI.M"
	series_table_data = {}
	date_keys = []
	ytd_chg_vals = []
	slice_data = {}
	cumulative_pre = 0
	all_series_ytd = []	
	
	@series_to_chart.each do |s|
		data = json_from_heroku_tsd(s,@tsd_file)
		next if data.nil?
		series = Series.new_transformation(data['name'] + '.' + data['frequency'], data['data'], Series.frequency_from_code(data['frequency']))
		plot_data = series.get_values_after(@start_date)
		ytd = series.ytd_percentage_change.get_values_after(@start_date).sort[-1][1]
 		dates = plot_data.keys.sort
		ytd_abs = plot_data[dates[-1]] - plot_data[Date.new(dates[-1].year)] rescue nil
		series_table_data[s] = {
			:series => series,
			:s_chg_data => series.annualized_percentage_change.get_values_after(@start_date),
			:a_chg_data => series.absolute_change.get_values_after(@start_date),
	    	:ytd => ytd,
			:ytd_abs => ytd_abs,
			:a_series => AremosSeries.get(s),
			:plot_data => plot_data,
		}
		date_keys |= plot_data.keys
		all_series_ytd.push(ytd)
	end
	
	date_keys.sort!
	vintage = @tsd_file.split('.')[0][-4..-1]
	if vintage[2] == 'Q'
		year = vintage[0..1]
		month = %w(01 04 07 10)[vintage[3].to_i-1]
		current_date_index = @series_to_chart[0][-1] == 'A' ? date_keys.index(Date.new(2000 + year)) : date_keys.index(Date.new(year, month))
		show_dates = current_date_index.nil? ? [date_keys[-3], date_keys[-2], date_keys[-1]] : [
			date_keys[current_date_index-1], 
			date_keys[current_date_index], 
			date_keys[current_date_index+1], 
			date_keys[current_date_index+2], 
			date_keys[current_date_index+3]
		]
	else
		show_dates = [date_keys[-3], date_keys[-2], date_keys[-1]]
	end
	
%>
<h1><%= @tsd_file %></h1>
<p>
<% @all_tsd_files.each do |tsd| %>
	<%= link_to(tsd, {:action => :show_tsd_table, :id => @data_list.id, :tsd_file => tsd}) %> | 
<% end %>
</p>
<div id="chart-board">
<table>
	<tr>
		<th></th>
		<% show_dates.each do |show_date| %>
		<th><%= show_date %></th>
		<% end %>
		<th>YTD</th>
	</tr>
<% @series_to_chart.each_with_index do |s,i| %>
	<%
		next if series_table_data[s].nil?
		#highest_level = summary_series.ts.data[date_keys[-1]]
		max_ytd = all_series_ytd.sort[-1]
		min_ytd = all_series_ytd.sort[0]
	%>
	<%= render :partial => 'tsd_tableview_row', :locals => {
		:series_table_data => series_table_data[s], 
		:series_name => s[0..-3], 
		:date_keys => date_keys,
		#:highest_level => highest_level,
		:max_ytd => max_ytd,
		:min_ytd => min_ytd,
		:tsd => @tsd_file,
		:list_index => i,
		:show_dates => show_dates
	} %>
	
<% end %>
</table>
</div>