<table style="width:800px;">
	<tr>
		<th style="width:80px;">Date</th>
		<th style="width:80px;">AREMOS</th>
		<th style="width:20px;">LVL</th>
		<th style="width:45px; text-align:right; padding:0 2px 0 0;">YOY</th>
		<th style="width:45px; text-align:right; padding:0 2px 0 0;">YTD</th>
		<th>Values</th>
	</tr>
<%
    def process_missing_dates
      date_hash = {}
      missing_dates = @as.data.keys - @series.data.keys unless @as.nil? or @as.data.nil?
      missing_dates.each {|md| date_hash[md] = @as.data[md]} unless @as.nil? or @as.data.nil?
      @series.current_data_points.sort_by(&:date_string).each {|cdp| date_hash[cdp.date_string] = cdp}
      date_hash
    end

    def non_current_data_points
      @series.data_points.where(:current => false)
    end

    date_hash = process_missing_dates
    ncdps = non_current_data_points


    def display_data_points(date_hash, ncdps)
      date_hash.sort.reverse.each do |date_string, element|
        if element.class == DataPoint
          # variables that need to be assigned because of block scoping


          cdp = element
          @series.units ||= 1
          cdp_val = cdp.value / @series.units
          a_value = (@as.nil? or @as.data.nil? or @as.data[cdp.date_string].nil?) ? "-" : @as.data[cdp.date_string].round(3)
          chg_value = (@chg.nil? or @chg.data[cdp.date_string].nil?) ? "-" : @chg.data[cdp.date_string].round(1) rescue "-"
          ytd_chg_value = (@ytd_chg.nil? or @ytd_chg.data[cdp.date_string].nil?) ? "-" : @ytd_chg.data[cdp.date_string].round(1) rescue "-"
          lvl_chg_value = (@lvl_chg.nil? or @lvl_chg.data[cdp.date_string].nil?) ? "-" : @lvl_chg.data[cdp.date_string].round(3) rescue "-"
          unless a_value.nil? or a_value.class == String
            diff = @series.a_diff(a_value, cdp_val.round(3))
            a_color = diff == 0 ? "#999999" : aremos_color(diff)
          end
          bgcolor = DataSource.find(cdp.data_source_id).color rescue "FFF"
%>
      <tr>
        <td><%= cdp.date_string %></td>
        <td><span style='color:<%= a_color %>'><%= a_value %></span></td>
        <td style="text-align:right;"><span class="per-chg"><%= lvl_chg_value %></span></td>
        <td style="text-align:right;"><span class="per-chg"><%= chg_value %><%= "%" if chg_value != "-" %></span></td>
        <td style="text-align:right;"><span class="per-chg"><%= ytd_chg_value %><%= "%" if ytd_chg_value != "-" %></span></td>
        <td>
				  <span class='current-datapoint'>
          <div class='datapoint current-datapoint' style='background-color:#<%= bgcolor %>'>
            <%= "%.3f" % cdp_val %><sup><%= (Time.now.to_date - cdp.created_at.to_date).to_i %><%="(ph)" if cdp.pseudo_history %></sup>
          </div>
<%
          previous_data_points = []
          dp_count = 0
          dp_val, bgcolor, pdp_sort = nil
          self.class.trace_execution_scoped(['Custom/data_points_partial/part_1']) do
          # ncdps.each {|dp| previous_data_points.push(dp) if dp.date_string == cdp.date_string}
          end
          self.class.trace_execution_scoped(['Custom/data_points_partial/part_2']) do
          pdp_sort = previous_data_points.sort {|dp1, dp2| dp2.created_at <=> dp1.created_at}
          end
          self.class.trace_execution_scoped(['Custom/data_points_partial/part_3']) do
          pdp_sort.each do |dp|
            dp_count += 1
            break if dp_count > 7
            dp_val = dp.value / @series.units
            bgcolor = DataSource.find(dp.data_source_id).color rescue "FFF"
%>
							<div class='datapoint' style='background-color:#<%= bgcolor %>'>
								<%= "%.3f" % dp_val %><sup><%= (Time.now.to_date - dp.created_at.to_date).to_i %><%="(ph)" if dp.pseudo_history %></sup>
							</div>
<%
          end
%>
            </span>
        </td>
      </tr>
<%
          end

        else
          a_color = element == 1000000000000000.0 ? "gray" : "red"
%>
      <tr>
        <td><%= date_string %></td>
        <td><span style='color:<%= a_color %>'><%= element %></span></td>
        <td></td>
        <td style="text-align:center"><span style='color:red'> - </span></td>
      </tr>
<%
        end
      end
    end

    # self.class.trace_execution_scoped(['Custom/data_points_partial/display_data_points']) do
    display_data_points(date_hash, ncdps)
    # end
%>
	<tr>
		<th>Date</th>
		<th>AREMOS</th>
		<th></th>
		<th>YOY</th>
		<th>YTD</th>
		<th>Values</th>
	</tr>
</table>
