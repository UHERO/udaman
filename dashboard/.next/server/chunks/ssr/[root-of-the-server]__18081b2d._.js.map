{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/shared/utils/index.ts"],"sourcesContent":["// Types for the result object with discriminated union\ntype Success<T> = {\n  data: T;\n  error: null;\n};\n\ntype Failure<E> = {\n  data: null;\n  error: E;\n};\n\ntype Result<T, E = Error> = Success<T> | Failure<E>;\n\nexport async function tryCatch<T, E = Error>(\n  promise: Promise<T>\n): Promise<Result<T, E>> {\n  try {\n    const data = await promise;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error as E };\n  }\n}\n\nexport const numBool = (n: number | null | undefined) => {\n  if (n === undefined || n === null) {\n    throw Error(\"n is not a number. n=\" + n);\n  }\n  return n !== 0;\n};\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AAahD,eAAe,SACpB,OAAmB;IAEnB,IAAI;QACF,MAAM,OAAO,MAAM;QACnB,OAAO;YAAE;YAAM,OAAO;QAAK;IAC7B,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,MAAM;YAAM,OAAO;QAAW;IACzC;AACF;AAEO,MAAM,UAAU,CAAC;IACtB,IAAI,MAAM,aAAa,MAAM,MAAM;QACjC,MAAM,MAAM,0BAA0B;IACxC;IACA,OAAO,MAAM;AACf","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/shared/utils/time.ts"],"sourcesContent":["import { data_points } from \"@prisma/client\";\nimport {\n  addMonths,\n  addQuarters,\n  addYears,\n  differenceInDays,\n  format,\n  isAfter,\n  startOfMonth,\n  startOfQuarter,\n  startOfYear,\n} from \"date-fns\";\n\n/* Functions for generating date lists for use in tables, charts, etc. Initially used in CPI-RPP portal */\n\nfunction generateDates(\n  startDate: Date,\n  endDate: Date,\n  frequency: string, // \"M\" | \"Q\" | \"A\"\n  formatString?: string\n): string[] {\n  if (\n    !startDate ||\n    !endDate ||\n    isNaN(startDate.getTime()) ||\n    isNaN(endDate.getTime())\n  ) {\n    throw new Error(\"generateDates: invalid dates passed as arguments\");\n  }\n\n  if (isAfter(startDate, endDate)) {\n    throw new Error(\n      \"generateDates: startDate must be before or equal to endDate\"\n    );\n  }\n\n  switch (frequency) {\n    case \"M\":\n      return generateMonths(startDate, endDate, formatString);\n    case \"Q\":\n      return generateQuarters(startDate, endDate, formatString);\n    case \"A\":\n      return generateYears(startDate, endDate, formatString);\n    default:\n      return generateMonths(startDate, endDate, formatString);\n  }\n}\n\nfunction generateMonths(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy-MM\"\n): string[] {\n  const months: string[] = [];\n  let current = startOfMonth(startDate);\n  const end = startOfMonth(endDate);\n\n  while (!isAfter(current, end)) {\n    months.push(format(current, formatString));\n    current = addMonths(current, 1);\n  }\n\n  return months;\n}\n\nfunction generateQuarters(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy-'Q'Q\"\n): string[] {\n  const quarters: string[] = [];\n  let current = startOfQuarter(startDate);\n  const end = startOfQuarter(endDate);\n\n  while (!isAfter(current, end)) {\n    quarters.push(format(current, formatString));\n    current = addQuarters(current, 1);\n  }\n\n  return quarters;\n}\n\nfunction generateYears(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy\"\n): string[] {\n  const years: string[] = [];\n  let current = startOfYear(startDate);\n  const end = startOfYear(endDate);\n\n  while (!isAfter(current, end)) {\n    years.push(format(current, formatString));\n    current = addYears(current, 1);\n  }\n\n  return years;\n}\n\n/** Try to keep display formats consistent across all systems */\nconst uheroDate = (date: Date, freq?: string) => {\n  switch (freq) {\n    case \"M\":\n      return format(date, \"MMM yyyy\");\n    case \"Q\":\n      return format(date, \"yyyy QQQ\");\n    case \"A\":\n      return format(date, \"yyyy\");\n    default:\n      return format(date, \"yyyy-MM-dd\");\n  }\n};\n\n/** Generates the age field in series table. Taken from JP's ruby version. Unsure why\n * they settled on the 100 day and 10 month intervals.\n */\nfunction dpAgeCode(updatedAt: string, pseudoHistory: boolean) {\n  const now = new Date();\n  const createdAt = new Date(updatedAt);\n  const days = differenceInDays(now, createdAt);\n  const months = Math.round(days / 30.0);\n\n  const prefix = pseudoHistory ? \"*\" : \"\";\n\n  let ageCode;\n  if (days < 100) {\n    ageCode = days.toString().padStart(2, \"0\");\n  } else if (months < 10) {\n    ageCode = `${months}m`;\n  } else {\n    let years = days / 365.0;\n    years = years % 1 < 0.8 ? Math.floor(years) : Math.floor(years) + 1;\n    years = years === 0 ? 1 : years;\n    ageCode = `${years}y`;\n  }\n\n  return prefix + ageCode;\n}\n\nfunction formatRuntime(runtimeSeconds: number | null): string {\n  if (runtimeSeconds === null) return \"-\";\n  return `${runtimeSeconds.toFixed(2)}s`;\n}\n\nexport { generateDates, uheroDate, dpAgeCode, formatRuntime };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/ui/table.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-semibold whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"max-w-80 truncate px-2 py-1 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,wPAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,wPAAC;YACC,aAAU;YACV,WAAW,IAAA,yIAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,sEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,wJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,kIACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/common.tsx"],"sourcesContent":["import { ComponentProps } from \"react\";\nimport { SeasonalAdjustment } from \"@shared/types/shared\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface SAIndicatorProps extends ComponentProps<\"span\"> {\n  sa: SeasonalAdjustment | null;\n}\n\nexport const SAIndicator = ({ sa, className, ...props }: SAIndicatorProps) => {\n  if (sa === null) sa = \"not_applicable\";\n  const saMap = {\n    not_seasonally_adjusted: \"NS\",\n    seasonally_adjusted: \"SA\",\n    not_applicable: \"NA\",\n  };\n\n  const saVariant = {\n    seasonally_adjusted: \"text-green-600\",\n    not_seasonally_adjusted: \"text-orange-600\",\n    not_applicable: \"text-primary\",\n  };\n\n  return (\n    <span className={cn(saVariant[sa], className)} {...props}>\n      {saMap[sa]}\n    </span>\n  );\n};\n"],"names":[],"mappings":";;;;;AAGA;;;AAMO,MAAM,cAAc,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,GAAG,OAAyB;IACvE,IAAI,OAAO,MAAM,KAAK;IACtB,MAAM,QAAQ;QACZ,yBAAyB;QACzB,qBAAqB;QACrB,gBAAgB;IAClB;IAEA,MAAM,YAAY;QAChB,qBAAqB;QACrB,yBAAyB;QACzB,gBAAgB;IAClB;IAEA,qBACE,wPAAC;QAAK,WAAW,IAAA,yIAAE,EAAC,SAAS,CAAC,GAAG,EAAE;QAAa,GAAG,KAAK;kBACrD,KAAK,CAAC,GAAG;;;;;;AAGhB","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/series/series-list-table.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { Measurement, SeriesSummary } from \"@shared/types\";\nimport {\n  DataPoint,\n  SeasonalAdjustment,\n  SeriesMetadata,\n} from \"@shared/types/shared\";\nimport { numBool } from \"@shared/utils\";\nimport { dpAgeCode, uheroDate } from \"@shared/utils/time\";\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { format } from \"date-fns\";\n\nimport { cn, getColor } from \"@/lib/utils\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nimport { SAIndicator } from \"../common\";\n\ninterface DataTableProps<TData> {\n  data: TData[];\n  options?: { decimals: number };\n}\n\nexport function SeriesSummaryTable<TData>({ data }: DataTableProps<TData>) {\n  const columns: ColumnDef<SeriesSummary>[] = [\n    {\n      accessorKey: \"name\",\n      header: () => (\n        <>\n          <span>Name</span>{\" \"}\n          <span className=\"text-xs no-underline opacity-70\">name@geo.freq</span>\n        </>\n      ),\n      cell: ({ row }) => {\n        return (\n          <Link href={`/series/${row.original.id}`}>\n            {row.getValue(\"name\")}\n          </Link>\n        );\n      },\n    },\n    {\n      accessorKey: \"seasonalAdjustment\",\n      header: \"SA\",\n      cell: ({ row }) => {\n        const sa = row.getValue(\"seasonalAdjustment\");\n        return <SAIndicator sa={sa as SeasonalAdjustment} />;\n      },\n    },\n    {\n      accessorKey: \"portalName\",\n      header: \"Portal Name\",\n    },\n    {\n      accessorKey: \"unitShortLabel\",\n      header: \"Units\",\n    },\n    {\n      accessorKey: \"minDate\",\n      header: \"First\",\n      cell: ({ row }) => {\n        const date = row.getValue(\"minDate\");\n        return format(date, \"yyyy-MM-dd\");\n      },\n    },\n    {\n      accessorKey: \"maxDate\",\n      header: \"Last\",\n      cell: ({ row }) => {\n        const date = row.getValue(\"maxDate\");\n        return format(date, \"yyyy-MM-dd\");\n      },\n    },\n    {\n      accessorKey: \"sourceDescription\",\n      header: \"Source\",\n      cell: ({ row }) => (\n        <div className=\"max-w-48 truncate\">\n          <Link href=\"#\" className=\"hover:font-medium hover:underline\">\n            {row.getValue(\"sourceDescription\")}\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"overflow-hidden rounded-md bg-white\">\n      <Table>\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row, i) => (\n              <TableRow\n                key={row.id}\n                data-state={row.getIsSelected() && \"selected\"}\n                className={i % 2 === 0 ? \"bg-muted\" : \"bg-none\"}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                No results.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport function MetaDataTable({\n  metadata,\n}: {\n  metadata: SeriesMetadata & { measurement: Measurement[] };\n}) {\n  console.log(\"MetaDataTable\", metadata);\n  const rows = [\n    { name: \"Universe\", val: metadata.s_universe },\n    {\n      name: \"Aliases\",\n      val: metadata.aliases.length > 0 ? metadata.aliases.length : \"-\",\n    },\n    {\n      name: \"Measurements\",\n      val: (\n        <Link\n          href={`/measurements/${metadata.measurement[0].id}`}\n          className=\"hover:underline\"\n        >\n          {metadata.measurement.map((m) => m.prefix).join(\",\")}\n        </Link>\n      ),\n    },\n    { name: \"Description\", val: metadata.s_description },\n    { name: \"Aremos Desc.\", val: metadata.s_name },\n    {\n      name: \"Units\",\n      val: `${metadata.u_long_label} (${metadata.u_short_label})`,\n    },\n    { name: \"Geography\", val: metadata.geo_display_name },\n    { name: \"Decimals\", val: metadata.s_decimals },\n    {\n      name: \"Seasonal Adjustment\",\n      val: <SAIndicator sa={metadata.xs_seasonal_adjustment} />,\n    },\n    {\n      name: \"Source\",\n      val: (\n        <a className=\"hover:underline\" href={metadata.source_link ?? \"#\"}>\n          {metadata.source_description}\n        </a>\n      ),\n    },\n    { name: \"Source Details\", val: metadata.source_detail_description },\n    {\n      name: \"Restricted\",\n      val: numBool(metadata.xs_restricted) ? \"True\" : \"False\",\n    },\n    {\n      name: \"Quarantined\",\n      val: numBool(metadata.xs_quarantined) ? \"True\" : \"False\",\n    },\n    { name: \"Created at\", val: new Date(metadata.s_created_at).toDateString() },\n    { name: \"Updated at\", val: new Date(metadata.s_updated_at).toDateString() },\n    { name: \"XID (devs only)\", val: metadata.xs_id },\n    { name: \"Internal ID\", val: metadata.s_id },\n  ];\n\n  return (\n    <div className=\"p-1\">\n      <div className=\"mb-2\">\n        <h2 className=\"text-xl font-bold opacity-80\">{metadata.s_name}</h2>\n        <p className=\"text-primary/80 text-lg font-bold\">\n          {metadata.s_dataPortalName}\n        </p>\n      </div>\n      <Table>\n        <TableBody>\n          {rows.map((r, i) => (\n            <TableRow\n              key={`metadata-row-${i}`}\n              className={cn(\"py-1\", i % 2 === 0 ? \"bg-muted\" : \"bg-none\")}\n            >\n              <TableCell className=\"w-32\">{r.name}</TableCell>\n              <TableCell className=\"max-w-48\">{r.val}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport const SeriesDataTable = ({\n  data,\n  options,\n}: {\n  data: DataPoint[];\n  options: { decimals: number };\n}) => {\n  const { decimals } = options;\n  /* \n  Table needs to know about\n    - series id for link to dp vintages view: /data-points/[id]\n    - loaders (source?)\n      - to highlight dp w/ loader-color\n      - show loader # column if more than 1 loader\n  */\n  const columns: ColumnDef<DataPoint>[] = [\n    {\n      accessorKey: \"date\",\n      header: \"Date\",\n      cell: ({ row }) => uheroDate(row.getValue(\"date\")),\n    },\n    {\n      accessorKey: \"value\",\n      header: \"Value\",\n      cell: ({ cell }) => {\n        const val = cell.getValue().toFixed(decimals);\n        return <span className=\"size-full font-bold\">{val}</span>;\n      },\n    },\n    {\n      accessorKey: \"yoy\",\n      header: \"YOY\",\n      cell: ({ cell }) => {\n        const val = cell.getValue() as number;\n        const displayVal = val === null ? \"-\" : val.toFixed(1) + \"%\";\n\n        return (\n          <span\n            className={cn(\n              \"text-primary/60 w-full text-end text-xs\",\n              parseInt(val) >= 0 ? \"text-green-800\" : \"text-red-800\"\n            )}\n          >\n            {displayVal}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"ytd\",\n      header: \"YTD\",\n      cell: ({ row }) => {\n        const val = row.getValue(\"ytd\");\n        const displayVal = val === null ? \"-\" : val.toFixed(1) + \"%\";\n        return (\n          <span\n            className={cn(\n              \"text-primary/60 w-full text-end text-xs\",\n              parseInt(val) >= 0 ? \"text-green-800\" : \"text-red-800\"\n            )}\n          >\n            {displayVal}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"lvl_change\",\n      header: \"LVL\",\n      cell: ({ row }) => {\n        const val = row.getValue(\"lvl_change\");\n        const displayVal = val === null ? \"-\" : val.toFixed(1) + \"%\";\n        return (\n          <span\n            className={cn(\n              \"text-primary/60 w-full text-end text-xs\",\n              parseInt(val) >= 0 ? \"text-green-800\" : \"text-red-800\"\n            )}\n          >\n            {displayVal}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"updated_at\",\n      header: \"Age\",\n      cell: ({ row }) =>\n        dpAgeCode(row.getValue(\"updated_at\"), row.getValue(\"pseudo_history\")),\n    },\n    {\n      accessorKey: \"pseudo_history\",\n      header: \"pseudo_history\",\n    },\n    {\n      accessorKey: \"color\",\n      header: \"color\",\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    initialState: {\n      columnVisibility: {\n        pseudo_history: false,\n        color: false,\n      },\n    },\n  });\n\n  return (\n    <div>\n      <Table className=\"border-separate border-spacing-1 font-mono\">\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <TableHead key={header.id} className=\"text-end\">\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </TableHead>\n              ))}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row, i) => (\n              <TableRow\n                key={row.id}\n                data-state={row.getIsSelected() && \"selected\"}\n                className={cn(\"group\", i % 2 === 0 ? \"bg-muted\" : \"bg-none\")}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell\n                    key={cell.id}\n                    className={cn(\n                      \"group-hover:bg-muted cursor-default border-b bg-white text-end\",\n                      cell.column.id === \"value\" &&\n                        getColor(cell.row.getValue(\"color\"))\n                    )}\n                  >\n                    {/* {cell.getValue() ?? \"-\"} */}\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                No data found.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}