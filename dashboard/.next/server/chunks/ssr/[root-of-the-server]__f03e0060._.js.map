{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/lib/types.ts"],"sourcesContent":["export type ActionResult<T> =\n  | { error: null; data: T }\n  | { error: string; data: null; statusCode?: number };\n\nexport const createActionResult = {\n  success: <T>(data: T): ActionResult<T> => ({ error: null, data }),\n  error: <T>(error: string, statusCode?: number): ActionResult<T> => ({\n    error,\n    data: null,\n    statusCode,\n  }),\n};\n"],"names":[],"mappings":";;;;AAIO,MAAM,qBAAqB;IAChC,SAAS,CAAI,OAA6B,CAAC;YAAE,OAAO;YAAM;QAAK,CAAC;IAChE,OAAO,CAAI,OAAe,aAAyC,CAAC;YAClE;YACA,MAAM;YACN;QACF,CAAC;AACH","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/lib/action-utils.ts"],"sourcesContent":["\"use server\";\n\nimport { ActionResult, createActionResult } from \"./types\";\n\nexport async function withErrorHandling<T>(\n  action: () => Promise<T>\n): Promise<ActionResult<T>> {\n  try {\n    const result = await action();\n    return createActionResult.success(result);\n  } catch (error) {\n    console.error(\"Server action error:\", error);\n\n    // Can add error types more as needed\n    if (error instanceof Error) {\n      if (error.message.includes(\"404\")) {\n        return createActionResult.error(\"Resource not found\", 404);\n      }\n      if (error.message.includes(\"400\")) {\n        return createActionResult.error(error.message, 400);\n      }\n    }\n\n    return createActionResult.error(\n      \"Something went wrong. Please try again later.\"\n    );\n  }\n}\n\nexport async function apiRequest<T>(\n  endpoint: string,\n  options?: RequestInit\n): Promise<T> {\n  const response = await fetch(\n    `${process.env.API_BASE_URL || \"http://127.0.0.1:3001\"}${endpoint}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...options?.headers,\n      },\n      ...options,\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    const error = new Error(data.error?.message || \"API request failed\");\n    error.name = `${response.status}`;\n    throw error;\n  }\n\n  return data;\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;;AAEO,eAAe,kBACpB,MAAwB;IAExB,IAAI;QACF,MAAM,SAAS,MAAM;QACrB,OAAO,yJAAkB,CAAC,OAAO,CAAC;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QAEtC,qCAAqC;QACrC,IAAI,iBAAiB,OAAO;YAC1B,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,QAAQ;gBACjC,OAAO,yJAAkB,CAAC,KAAK,CAAC,sBAAsB;YACxD;YACA,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,QAAQ;gBACjC,OAAO,yJAAkB,CAAC,KAAK,CAAC,MAAM,OAAO,EAAE;YACjD;QACF;QAEA,OAAO,yJAAkB,CAAC,KAAK,CAC7B;IAEJ;AACF;AAEO,eAAe,WACpB,QAAgB,EAChB,OAAqB;IAErB,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,YAAY,IAAI,0BAA0B,UAAU,EACnE;QACE,SAAS;YACP,gBAAgB;YAChB,GAAG,SAAS,OAAO;QACrB;QACA,GAAG,OAAO;IACZ;IAEF,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,QAAQ,IAAI,MAAM,KAAK,KAAK,EAAE,WAAW;QAC/C,MAAM,IAAI,GAAG,GAAG,SAAS,MAAM,EAAE;QACjC,MAAM;IACR;IAEA,OAAO;AACT;;;IAhDsB;IAyBA;;AAzBA,yPAAA;AAyBA,yPAAA","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/actions/series-actions.ts"],"sourcesContent":["\"use server\";\n\nimport { Series } from \"@shared/types\";\nimport { apiRequest, withErrorHandling } from \"lib/action-utils\";\nimport { ActionResult } from \"lib/types\";\n\ninterface SeriesListResponse {\n  data: Series[];\n  meta: {\n    offset: number;\n    limit: number;\n    count: number;\n  };\n}\n\ninterface SeriesResponse {\n  data: Series;\n}\n\nexport async function getSeries(): Promise<ActionResult<Series[]>> {\n  return withErrorHandling(async () => {\n    const response = await apiRequest<SeriesListResponse>(\"/series\");\n    console.log(\"ENV TEST\", process.env.DB_HOST);\n    return response.data;\n  });\n}\n\nexport async function getSeriesById(id: string): Promise<ActionResult<Series>> {\n  return withErrorHandling(async () => {\n    const response = await apiRequest<SeriesResponse>(`/series/${id}`);\n    return response.data;\n  });\n}\n\nexport async function createSeries(\n  formData: FormData\n): Promise<ActionResult<Series>> {\n  return withErrorHandling(async () => {\n    const seriesData = {\n      name: formData.get(\"name\") as string,\n      dataPortalName: formData.get(\"dataPortalName\") as string,\n      // ... other fields\n    };\n\n    const response = await apiRequest<SeriesResponse>(\"/series\", {\n      method: \"POST\",\n      body: JSON.stringify(seriesData),\n    });\n\n    return response.data;\n  });\n}\n\n// export async function getSeriesSummaries() {\n//   // SELECT `xseries`.* FROM `xseries` WHERE `xseries`.`id` = ? LIMIT ?  [[\"id\", 405962], [\"LIMIT\", 1]]\n// }\n"],"names":[],"mappings":";;;;;;;;;AAGA;;;;AAgBO,eAAe;IACpB,OAAO,IAAA,kKAAiB,EAAC;QACvB,MAAM,WAAW,MAAM,IAAA,2JAAU,EAAqB;QACtD,QAAQ,GAAG,CAAC,YAAY,QAAQ,GAAG,CAAC,OAAO;QAC3C,OAAO,SAAS,IAAI;IACtB;AACF;AAEO,eAAe,cAAc,EAAU;IAC5C,OAAO,IAAA,kKAAiB,EAAC;QACvB,MAAM,WAAW,MAAM,IAAA,2JAAU,EAAiB,CAAC,QAAQ,EAAE,IAAI;QACjE,OAAO,SAAS,IAAI;IACtB;AACF;AAEO,eAAe,aACpB,QAAkB;IAElB,OAAO,IAAA,kKAAiB,EAAC;QACvB,MAAM,aAAa;YACjB,MAAM,SAAS,GAAG,CAAC;YACnB,gBAAgB,SAAS,GAAG,CAAC;QAE/B;QAEA,MAAM,WAAW,MAAM,IAAA,2JAAU,EAAiB,WAAW;YAC3D,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,OAAO,SAAS,IAAI;IACtB;AACF,EAEA,+CAA+C;CAC/C,0GAA0G;CAC1G,IAAI;;;IApCkB;IAQA;IAOA;;AAfA,yPAAA;AAQA,yPAAA;AAOA,yPAAA","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/.next-internal/server/app/%28udaman%29/series/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getSeries as '00daf7f8e5e08116e53170ae0e1bc699ae6b1aa9ee'} from 'ACTIONS_MODULE0'\nexport {createSeries as '4054ab57a26841b7235b68e5b6ba4ca77c523100e2'} from 'ACTIONS_MODULE0'\nexport {getSeriesById as '40a253856b9a2c01be05307e447371b3d7e0c466ad'} from 'ACTIONS_MODULE0'\nexport {withErrorHandling as '407e64a257b0bea183b550c12178e1be47be27e200'} from 'ACTIONS_MODULE1'\nexport {apiRequest as '6007855f4aaf71eccf29dd5056ef7b747977cc4606'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAGA","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/series/series-summary-table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SeriesSummaryTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call SeriesSummaryTable() from the server but SeriesSummaryTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/udaman/dashboard/components/series/series-summary-table.tsx <module evaluation>\",\n    \"SeriesSummaryTable\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,kRAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6FACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/series/series-summary-table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SeriesSummaryTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call SeriesSummaryTable() from the server but SeriesSummaryTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/udaman/dashboard/components/series/series-summary-table.tsx\",\n    \"SeriesSummaryTable\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,kRAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/app/%28udaman%29/series/page.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { notFound } from \"next/navigation\";\nimport { getSeries } from \"actions/series-actions\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { SeriesSummaryTable } from \"@/components/series/series-summary-table\";\n\nexport default async function Page() {\n  const { error, data } = await getSeries();\n  if (error) throw error;\n  if (!data) notFound();\n  const count = data.length ?? 0;\n  return (\n    <div className=\"flex flex-1 flex-col gap-4 p-4 pt-0\">\n      <div className=\"grid auto-rows-min gap-4 md:grid-cols-3\">\n        <div className=\"bg-muted/50 aspect-video rounded-xl\">\n          <h2 className=\"text-5xl font-bold opacity-80\">\n            Data Series: <span className=\"font-mono\">{count}</span>\n          </h2>\n        </div>\n        <div className=\"grid aspect-video grid-rows-4 rounded-xl\">\n          <h2 className=\"text-2xl\">Trouble</h2>\n          <Button asChild size={\"lg\"} variant={\"secondary\"}>\n            <Link href=\"#\">Missing Source</Link>\n          </Button>\n          <Button asChild size={\"lg\"} variant={\"secondary\"}>\n            <Link href=\"#\">Unrestricted Missing Source</Link>\n          </Button>\n          <Button asChild size={\"lg\"} variant={\"secondary\"}>\n            <Link href=\"#\">Quarantined</Link>\n          </Button>\n        </div>\n        <div className=\"bg-muted/50 aspect-video rounded-xl\" />\n      </div>\n      <div className=\"bg-muted/50 min-h-[100vh] flex-1 rounded-xl md:min-h-min\">\n        <SeriesSummaryTable data={data} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;AAEA;AACA;;;;;;;AAEe,eAAe;IAC5B,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,IAAA,gKAAS;IACvC,IAAI,OAAO,MAAM;IACjB,IAAI,CAAC,MAAM,IAAA,2MAAQ;IACnB,MAAM,QAAQ,KAAK,MAAM,IAAI;IAC7B,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBAAI,WAAU;;kCACb,wPAAC;wBAAI,WAAU;kCACb,cAAA,wPAAC;4BAAG,WAAU;;gCAAgC;8CAC/B,wPAAC;oCAAK,WAAU;8CAAa;;;;;;;;;;;;;;;;;kCAG9C,wPAAC;wBAAI,WAAU;;0CACb,wPAAC;gCAAG,WAAU;0CAAW;;;;;;0CACzB,wPAAC,4JAAM;gCAAC,OAAO;gCAAC,MAAM;gCAAM,SAAS;0CACnC,cAAA,wPAAC,iLAAI;oCAAC,MAAK;8CAAI;;;;;;;;;;;0CAEjB,wPAAC,4JAAM;gCAAC,OAAO;gCAAC,MAAM;gCAAM,SAAS;0CACnC,cAAA,wPAAC,iLAAI;oCAAC,MAAK;8CAAI;;;;;;;;;;;0CAEjB,wPAAC,4JAAM;gCAAC,OAAO;gCAAC,MAAM;gCAAM,SAAS;0CACnC,cAAA,wPAAC,iLAAI;oCAAC,MAAK;8CAAI;;;;;;;;;;;;;;;;;kCAGnB,wPAAC;wBAAI,WAAU;;;;;;;;;;;;0BAEjB,wPAAC;gBAAI,WAAU;0BACb,cAAA,wPAAC,gMAAkB;oBAAC,MAAM;;;;;;;;;;;;;;;;;AAIlC","debugId":null}}]
}