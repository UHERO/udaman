{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/shared/utils/index.ts"],"sourcesContent":["// Types for the result object with discriminated union\ntype Success<T> = {\n  data: T;\n  error: null;\n};\n\ntype Failure<E> = {\n  data: null;\n  error: E;\n};\n\ntype Result<T, E = Error> = Success<T> | Failure<E>;\n\nexport async function tryCatch<T, E = Error>(\n  promise: Promise<T>\n): Promise<Result<T, E>> {\n  try {\n    const data = await promise;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error as E };\n  }\n}\n\nexport const numBool = (n: number | null | undefined) => {\n  if (n === undefined || n === null) {\n    throw Error(\"n is not a number. n=\" + n);\n  }\n  return n !== 0;\n};\n\nexport function isValidSeriesName(text: string): boolean {\n  // Checks for basic series name pattern: PREFIX@GEO.FREQ\n  const seriesNamePattern = /^[A-Z0-9_&%$]+@[A-Z0-9_]+(\\.[ASQMWD])?$/i;\n  return seriesNamePattern.test(text);\n}\n\nexport function formatTimestamp(timestampSeconds: number): string {\n  if (!timestampSeconds) return \"Never\";\n\n  const date = new Date(timestampSeconds * 1000);\n  return date.toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: false,\n  });\n}\n\nexport function formatValue(\n  value: number | null | undefined,\n  label: string\n): string {\n  if (value === null || value === undefined) return `${label}: N/A`;\n  return `${label}: ${value}`;\n}\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;;;;;;;AAahD,eAAe,SACpB,OAAmB;IAEnB,IAAI;QACF,MAAM,OAAO,MAAM;QACnB,OAAO;YAAE;YAAM,OAAO;QAAK;IAC7B,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,MAAM;YAAM,OAAO;QAAW;IACzC;AACF;AAEO,MAAM,UAAU,CAAC;IACtB,IAAI,MAAM,aAAa,MAAM,MAAM;QACjC,MAAM,MAAM,0BAA0B;IACxC;IACA,OAAO,MAAM;AACf;AAEO,SAAS,kBAAkB,IAAY;IAC5C,wDAAwD;IACxD,MAAM,oBAAoB;IAC1B,OAAO,kBAAkB,IAAI,CAAC;AAChC;AAEO,SAAS,gBAAgB,gBAAwB;IACtD,IAAI,CAAC,kBAAkB,OAAO;IAE9B,MAAM,OAAO,IAAI,KAAK,mBAAmB;IACzC,OAAO,KAAK,cAAc,CAAC,SAAS;QAClC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,QAAQ;IACV;AACF;AAEO,SAAS,YACd,KAAgC,EAChC,KAAa;IAEb,IAAI,UAAU,QAAQ,UAAU,WAAW,OAAO,GAAG,MAAM,KAAK,CAAC;IACjE,OAAO,GAAG,MAAM,EAAE,EAAE,OAAO;AAC7B","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/common.tsx"],"sourcesContent":["import { ComponentProps } from \"react\";\nimport { SeasonalAdjustment } from \"@shared/types/shared\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface SAIndicatorProps extends ComponentProps<\"span\"> {\n  sa: SeasonalAdjustment | null;\n}\n\nexport const SAIndicator = ({ sa, className, ...props }: SAIndicatorProps) => {\n  if (sa === null) sa = \"not_applicable\";\n  const saMap = {\n    not_seasonally_adjusted: \"NS\",\n    seasonally_adjusted: \"SA\",\n    not_applicable: \"NA\",\n  };\n\n  const saVariant = {\n    seasonally_adjusted: \"text-green-600\",\n    not_seasonally_adjusted: \"text-orange-600\",\n    not_applicable: \"text-primary\",\n  };\n\n  return (\n    <span className={cn(saVariant[sa], className)} {...props}>\n      {saMap[sa]}\n    </span>\n  );\n};\n"],"names":[],"mappings":";;;;;AAGA;;;AAMO,MAAM,cAAc,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,GAAG,OAAyB;IACvE,IAAI,OAAO,MAAM,KAAK;IACtB,MAAM,QAAQ;QACZ,yBAAyB;QACzB,qBAAqB;QACrB,gBAAgB;IAClB;IAEA,MAAM,YAAY;QAChB,qBAAqB;QACrB,yBAAyB;QACzB,gBAAgB;IAClB;IAEA,qBACE,wPAAC;QAAK,WAAW,IAAA,yIAAE,EAAC,SAAS,CAAC,GAAG,EAAE;QAAa,GAAG,KAAK;kBACrD,KAAK,CAAC,GAAG;;;;;;AAGhB","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/ui/table.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-semibold whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"max-w-80 truncate px-2 py-1 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,wPAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,wPAAC;YACC,aAAU;YACV,WAAW,IAAA,yIAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,sEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,wJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EACX,kIACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,wPAAC;QACC,aAAU;QACV,WAAW,IAAA,yIAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/series/meta-data-table.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo } from \"react\";\nimport Link from \"next/link\";\nimport { Measurement } from \"@shared/types\";\nimport { SeriesMetadata } from \"@shared/types/shared\";\nimport { numBool } from \"@shared/utils\";\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { SAIndicator } from \"../common\";\nimport { Table, TableBody, TableCell, TableRow } from \"../ui/table\";\n\ntype MetadataRow = {\n  name: string;\n  value: React.ReactNode;\n};\n\nexport function MetaDataTable({\n  metadata,\n}: {\n  metadata: SeriesMetadata & { measurement: Measurement[] };\n}) {\n  console.log(\"MetaDataTable\", metadata);\n\n  const data: MetadataRow[] = useMemo(\n    () => [\n      { name: \"Universe\", value: metadata.s_universe },\n      {\n        name: \"Aliases\",\n        value: metadata.aliases.length > 0 ? metadata.aliases.length : \"-\",\n      },\n      {\n        name: \"Measurements\",\n        value: metadata.measurement.map((m) => (\n          <Link\n            key={`${m.id}`}\n            href={`/measurements/${m.id}`}\n            className=\"block hover:underline\"\n          >\n            {m.prefix}\n          </Link>\n        )),\n      },\n      { name: \"Description\", value: metadata.s_description },\n      { name: \"Aremos Desc.\", value: metadata.s_name },\n      {\n        name: \"Units\",\n        value: `${metadata.u_long_label} (${metadata.u_short_label})`,\n      },\n      { name: \"Geography\", value: metadata.geo_display_name },\n      { name: \"Decimals\", value: metadata.s_decimals },\n      {\n        name: \"Seasonal Adjustment\",\n        value: <SAIndicator sa={metadata.xs_seasonal_adjustment} />,\n      },\n      {\n        name: \"Source\",\n        value: (\n          <a className=\"hover:underline\" href={metadata.source_link ?? \"#\"}>\n            {metadata.source_description}\n          </a>\n        ),\n      },\n      { name: \"Source Details\", value: metadata.source_detail_description },\n      {\n        name: \"Restricted\",\n        value: numBool(metadata.xs_restricted) ? \"True\" : \"False\",\n      },\n      {\n        name: \"Quarantined\",\n        value: numBool(metadata.xs_quarantined) ? \"True\" : \"False\",\n      },\n      {\n        name: \"Created at\",\n        value: new Date(metadata.s_created_at).toDateString(),\n      },\n      {\n        name: \"Updated at\",\n        value: new Date(metadata.s_updated_at).toDateString(),\n      },\n      { name: \"XID (devs only)\", value: metadata.xs_id },\n      { name: \"Internal ID\", value: metadata.s_id },\n    ],\n    [metadata]\n  );\n\n  const columns: ColumnDef<MetadataRow>[] = useMemo(\n    () => [\n      {\n        accessorKey: \"name\",\n        header: \"Property\",\n        meta: {\n          className: \"w-32\",\n        },\n        cell: ({ cell }) => (\n          <span className=\"font-medium\">{cell.getValue() as string}</span>\n        ),\n      },\n      {\n        accessorKey: \"value\",\n        header: \"Value\",\n        meta: {\n          className: \"max-w-64\",\n        },\n        cell: ({ cell }) => cell.getValue() as React.ReactNode,\n      },\n    ],\n    []\n  );\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"p-1\">\n      <div className=\"mb-2\">\n        <h2 className=\"text-xl font-bold opacity-80\">{metadata.s_name}</h2>\n        <p className=\"text-primary/80 text-lg font-bold\">\n          {metadata.s_dataPortalName}\n        </p>\n      </div>\n\n      <Table className=\"cursor-default\">\n        <TableBody>\n          {table.getRowModel().rows.map((row, index) => (\n            <TableRow\n              key={row.id}\n              className={cn(\"py-1\", index % 2 === 0 ? \"bg-muted\" : \"bg-none\")}\n            >\n              {row.getVisibleCells().map((cell) => (\n                <TableCell\n                  key={cell.id}\n                  className={cell.column.columnDef.meta?.className}\n                >\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/shared/utils/time.ts"],"sourcesContent":["import { data_points } from \"@prisma/client\";\nimport {\n  addMonths,\n  addQuarters,\n  addYears,\n  differenceInDays,\n  format,\n  isAfter,\n  startOfMonth,\n  startOfQuarter,\n  startOfYear,\n} from \"date-fns\";\n\n/* Functions for generating date lists for use in tables, charts, etc. Initially used in CPI-RPP portal */\n\nfunction generateDates(\n  startDate: Date,\n  endDate: Date,\n  frequency: string, // \"M\" | \"Q\" | \"A\"\n  formatString?: string\n): string[] {\n  if (\n    !startDate ||\n    !endDate ||\n    isNaN(startDate.getTime()) ||\n    isNaN(endDate.getTime())\n  ) {\n    throw new Error(\"generateDates: invalid dates passed as arguments\");\n  }\n\n  if (isAfter(startDate, endDate)) {\n    throw new Error(\n      \"generateDates: startDate must be before or equal to endDate\"\n    );\n  }\n\n  switch (frequency) {\n    case \"M\":\n      return generateMonths(startDate, endDate, formatString);\n    case \"Q\":\n      return generateQuarters(startDate, endDate, formatString);\n    case \"A\":\n      return generateYears(startDate, endDate, formatString);\n    default:\n      return generateMonths(startDate, endDate, formatString);\n  }\n}\n\nfunction generateMonths(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy-MM\"\n): string[] {\n  const months: string[] = [];\n  let current = startOfMonth(startDate);\n  const end = startOfMonth(endDate);\n\n  while (!isAfter(current, end)) {\n    months.push(format(current, formatString));\n    current = addMonths(current, 1);\n  }\n\n  return months;\n}\n\nfunction generateQuarters(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy-'Q'Q\"\n): string[] {\n  const quarters: string[] = [];\n  let current = startOfQuarter(startDate);\n  const end = startOfQuarter(endDate);\n\n  while (!isAfter(current, end)) {\n    quarters.push(format(current, formatString));\n    current = addQuarters(current, 1);\n  }\n\n  return quarters;\n}\n\nfunction generateYears(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy\"\n): string[] {\n  const years: string[] = [];\n  let current = startOfYear(startDate);\n  const end = startOfYear(endDate);\n\n  while (!isAfter(current, end)) {\n    years.push(format(current, formatString));\n    current = addYears(current, 1);\n  }\n\n  return years;\n}\n\n/** Try to keep display formats consistent across all systems */\nconst uheroDate = (date: Date, freq?: string) => {\n  switch (freq) {\n    case \"M\":\n      return format(date, \"MMM yyyy\");\n    case \"Q\":\n      return format(date, \"yyyy QQQ\");\n    case \"A\":\n      return format(date, \"yyyy\");\n    default:\n      return format(date, \"yyyy-MM-dd\");\n  }\n};\n\n/** Generates the age field in series table. Taken from JP's ruby version. Unsure why\n * they settled on the 100 day and 10 month intervals.\n */\nfunction dpAgeCode(updatedAt: string, pseudoHistory: boolean) {\n  const now = new Date();\n  const createdAt = new Date(updatedAt);\n  const days = differenceInDays(now, createdAt);\n  const months = Math.round(days / 30.0);\n\n  const prefix = pseudoHistory ? \"*\" : \"\";\n\n  let ageCode;\n  if (days < 100) {\n    ageCode = days.toString().padStart(2, \"0\");\n  } else if (months < 10) {\n    ageCode = `${months}m`;\n  } else {\n    let years = days / 365.0;\n    years = years % 1 < 0.8 ? Math.floor(years) : Math.floor(years) + 1;\n    years = years === 0 ? 1 : years;\n    ageCode = `${years}y`;\n  }\n\n  return prefix + ageCode;\n}\n\nfunction formatRuntime(runtimeSeconds: number | null): string {\n  if (runtimeSeconds === null) return \"-\";\n  return `${runtimeSeconds.toFixed(2)}s`;\n}\n\nexport { generateDates, uheroDate, dpAgeCode, formatRuntime };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/helpers.tsx"],"sourcesContent":["/* Tailwind requires colors be named somewhere in the codebase in order to use so using\nthis implementation to get started, may switch to using hex codes as keys to tailwind \ncolors for better colors. */\nexport const getColor = (color: string | null) => {\n  if (color === null) return \"bg-muted\";\n  const colors: Record<string, string> = {\n    // Purples\n    B2A1EA: \"bg-[#B2A1EA]\",\n    CDC8FE: \"bg-[#CDC8FE]\",\n    A885EF: \"bg-[#A885EF]\",\n    // Oranges\n    FFA94E: \"bg-[#FFA94E]\",\n    FFA500: \"bg-[#FFA500]\",\n    // blues\n    A9BEF2: \"bg-[#A9BEF2]\",\n    C3DDF9: \"bg-[#C3DDF9]\",\n    \"6495ED\": \"bg-[#6495ED]\",\n    // yellow\n    F9FF8B: \"bg-[#F9FF8B]\",\n    FBFFBD: \"bg-[#FBFFBD]\",\n    F0E67F: \"bg-[#F0E67F]\",\n    // browns\n    CAAF8C: \"bg-[#CAAF8C]\",\n    DFC3AA: \"bg-[#DFC3AA]\",\n    B78E5C: \"bg-[#B78E5C]\",\n    // salmon:\n    FEB4AA: \"bg-[#FEB4AA]\",\n    // greens:\n    \"9FDD8C\": \"bg-[#9FDD8C]\",\n    D0F0C0: \"bg-[#D0F0C0]\",\n    \"88D3B2\": \"bg-[#88D3B2]\",\n    \"74C365\": \"bg-[#74C365]\",\n  };\n  return colors[color];\n};\n"],"names":[],"mappings":"AAAA;;0BAE0B;;;;AACnB,MAAM,WAAW,CAAC;IACvB,IAAI,UAAU,MAAM,OAAO;IAC3B,MAAM,SAAiC;QACrC,UAAU;QACV,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,QAAQ;QACR,UAAU;QACV,UAAU;QACV,QAAQ;QACR,UAAU;QACV,UAAU;IACZ;IACA,OAAO,MAAM,CAAC,MAAM;AACtB","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/series/series-table.tsx"],"sourcesContent":["\"use client\";\n\nimport { DataPoint } from \"@shared/types/shared\";\nimport { dpAgeCode, uheroDate } from \"@shared/utils/time\";\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nimport { getColor } from \"../helpers\";\n\nconst isNumber = (val: unknown): val is number => {\n  if (val === null || val === undefined) return false;\n  if (typeof val !== \"number\") return false;\n  if (isNaN(val)) return false;\n  return true;\n};\n\nconst dpColor = (n: number) => {\n  if (n === 0) return \"text-primary/70\";\n  if (n > 0) return \"text-green-800\";\n  return \"text-red-800\";\n};\n\nexport const SeriesDataTable = ({\n  data,\n  options,\n}: {\n  data: DataPoint[];\n  options: {\n    decimals: number;\n    showLoaderCol: boolean;\n  };\n}) => {\n  const { decimals } = options;\n\n  const PercCell = ({ n }: { n: number | null }) => {\n    if (!isNumber(n)) return \"-\";\n    return (\n      <span\n        className={cn(\"text-primary/60 w-full text-end text-xs\", dpColor(n))}\n      >\n        {n.toFixed(decimals)}%\n      </span>\n    );\n  };\n\n  const columns: ColumnDef<DataPoint>[] = [\n    {\n      accessorKey: \"date\",\n      header: \"Date\",\n      cell: ({ row }) => uheroDate(row.getValue(\"date\")),\n    },\n    {\n      accessorKey: \"value\",\n      header: \"Value\",\n      cell: ({ cell }) => {\n        const val = cell.getValue() as number | null;\n        return (\n          <span className=\"font-bold\">\n            {isNumber(val) ? val.toFixed(decimals) : \"-\"}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"yoy\",\n      header: \"YOY\",\n      meta: {\n        className: \"text-primary/60 w-full text-end text-xs\",\n      },\n      cell: ({ cell }) => {\n        const val = cell.getValue() as number | null;\n        return <PercCell n={val} />;\n      },\n    },\n    {\n      accessorKey: \"ytd\",\n      header: \"YTD\",\n      cell: ({ cell }) => {\n        const val = cell.getValue() as number | null;\n        return <PercCell n={val} />;\n      },\n    },\n    {\n      accessorKey: \"lvl_change\",\n      header: \"LVL\",\n      cell: ({ cell }) => {\n        const val = cell.getValue() as number | null;\n        return <PercCell n={val} />;\n      },\n    },\n    {\n      accessorKey: \"updated_at\",\n      header: \"Age\",\n      cell: ({ row }) =>\n        dpAgeCode(row.getValue(\"updated_at\"), row.getValue(\"pseudo_history\")),\n    },\n    {\n      accessorKey: \"loader_id\",\n      header: \"Loader\",\n    },\n    {\n      accessorKey: \"pseudo_history\",\n      header: \"pseudo_history\",\n    },\n    {\n      accessorKey: \"color\",\n      header: \"color\",\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    initialState: {\n      columnVisibility: {\n        pseudo_history: false,\n        color: false,\n        loader_id: options.showLoaderCol,\n      },\n    },\n  });\n  console.log(\"data\", data[0]);\n  return (\n    <div>\n      <Table className=\"border-separate border-spacing-1 font-mono\">\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <TableHead key={header.id} className=\"text-end\">\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </TableHead>\n              ))}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row, i) => (\n              <TableRow\n                key={row.id}\n                data-state={row.getIsSelected() && \"selected\"}\n                className={cn(\"group\", i % 2 === 0 ? \"bg-muted\" : \"bg-none\")}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell\n                    key={cell.id}\n                    className={cn(\n                      \"group-hover:bg-muted cursor-default border-b bg-white text-end\",\n                      cell.column.id === \"value\" &&\n                        getColor(cell.row.getValue(\"color\"))\n                    )}\n                  >\n                    {/* {cell.getValue() ?? \"-\"} */}\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                No data found.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <TableHead key={header.id} className=\"h-5 text-end\">\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </TableHead>\n              ))}\n            </TableRow>\n          ))}\n        </TableHeader>\n      </Table>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}