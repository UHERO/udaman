{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/shared/utils/time.ts"],"sourcesContent":["import { data_points } from \"@prisma/client\";\nimport {\n  addMonths,\n  addQuarters,\n  addYears,\n  differenceInDays,\n  format,\n  isAfter,\n  startOfMonth,\n  startOfQuarter,\n  startOfYear,\n} from \"date-fns\";\n\n/* Functions for generating date lists for use in tables, charts, etc. Initially used in CPI-RPP portal */\n\nfunction generateDates(\n  startDate: Date,\n  endDate: Date,\n  frequency: string, // \"M\" | \"Q\" | \"A\"\n  formatString?: string\n): string[] {\n  if (\n    !startDate ||\n    !endDate ||\n    isNaN(startDate.getTime()) ||\n    isNaN(endDate.getTime())\n  ) {\n    throw new Error(\"generateDates: invalid dates passed as arguments\");\n  }\n\n  if (isAfter(startDate, endDate)) {\n    throw new Error(\n      \"generateDates: startDate must be before or equal to endDate\"\n    );\n  }\n\n  switch (frequency) {\n    case \"M\":\n      return generateMonths(startDate, endDate, formatString);\n    case \"Q\":\n      return generateQuarters(startDate, endDate, formatString);\n    case \"A\":\n      return generateYears(startDate, endDate, formatString);\n    default:\n      return generateMonths(startDate, endDate, formatString);\n  }\n}\n\nfunction generateMonths(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy-MM\"\n): string[] {\n  const months: string[] = [];\n  let current = startOfMonth(startDate);\n  const end = startOfMonth(endDate);\n\n  while (!isAfter(current, end)) {\n    months.push(format(current, formatString));\n    current = addMonths(current, 1);\n  }\n\n  return months;\n}\n\nfunction generateQuarters(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy-'Q'Q\"\n): string[] {\n  const quarters: string[] = [];\n  let current = startOfQuarter(startDate);\n  const end = startOfQuarter(endDate);\n\n  while (!isAfter(current, end)) {\n    quarters.push(format(current, formatString));\n    current = addQuarters(current, 1);\n  }\n\n  return quarters;\n}\n\nfunction generateYears(\n  startDate: Date,\n  endDate: Date,\n  formatString: string = \"yyyy\"\n): string[] {\n  const years: string[] = [];\n  let current = startOfYear(startDate);\n  const end = startOfYear(endDate);\n\n  while (!isAfter(current, end)) {\n    years.push(format(current, formatString));\n    current = addYears(current, 1);\n  }\n\n  return years;\n}\n\n/** Try to keep display formats consistent across all systems */\nconst uheroDate = (date: Date, freq?: string) => {\n  switch (freq) {\n    case \"M\":\n      return format(date, \"MMM yyyy\");\n    case \"Q\":\n      return format(date, \"yyyy QQQ\");\n    case \"A\":\n      return format(date, \"yyyy\");\n    default:\n      return format(date, \"yyyy-MM-dd\");\n  }\n};\n\n/** Generates the age field in series table. Taken from JP's ruby version. Unsure why\n * they settled on the 100 day and 10 month intervals.\n */\nfunction dpAgeCode(updatedAt: string, pseudoHistory: boolean) {\n  const now = new Date();\n  const createdAt = new Date(updatedAt);\n  const days = differenceInDays(now, createdAt);\n  const months = Math.round(days / 30.0);\n\n  const prefix = pseudoHistory ? \"*\" : \"\";\n\n  let ageCode;\n  if (days < 100) {\n    ageCode = days.toString().padStart(2, \"0\");\n  } else if (months < 10) {\n    ageCode = `${months}m`;\n  } else {\n    let years = days / 365.0;\n    years = years % 1 < 0.8 ? Math.floor(years) : Math.floor(years) + 1;\n    years = years === 0 ? 1 : years;\n    ageCode = `${years}y`;\n  }\n\n  return prefix + ageCode;\n}\n\nfunction formatRuntime(runtimeSeconds: number | null): string {\n  if (runtimeSeconds === null) return \"-\";\n  return `${runtimeSeconds.toFixed(2)}s`;\n}\n\nexport { generateDates, uheroDate, dpAgeCode, formatRuntime };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/ui/table.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-semibold whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"max-w-80 truncate px-2 py-1 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACb,qBACE,uMAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,uMAAC;YACC,aAAU;YACV,WAAW,IAAA,4IAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EAAC,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACjB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IAChB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EACX,sEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EACX,wJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EACX,kIACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,KAGY;QAHZ,EACpB,SAAS,EACT,GAAG,OAC6B,GAHZ;IAIpB,qBACE,uMAAC;QACC,aAAU;QACV,WAAW,IAAA,4IAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/common.tsx"],"sourcesContent":["import { ComponentProps } from \"react\";\nimport { SeasonalAdjustment } from \"@shared/types/shared\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface SAIndicatorProps extends ComponentProps<\"span\"> {\n  sa: SeasonalAdjustment | null;\n}\n\nexport const SAIndicator = ({ sa, className, ...props }: SAIndicatorProps) => {\n  if (sa === null) sa = \"not_applicable\";\n  const saMap = {\n    not_seasonally_adjusted: \"NS\",\n    seasonally_adjusted: \"SA\",\n    not_applicable: \"NA\",\n  };\n\n  const saVariant = {\n    seasonally_adjusted: \"text-green-600\",\n    not_seasonally_adjusted: \"text-orange-600\",\n    not_applicable: \"text-primary\",\n  };\n\n  return (\n    <span className={cn(saVariant[sa], className)} {...props}>\n      {saMap[sa]}\n    </span>\n  );\n};\n"],"names":[],"mappings":";;;;;AAGA;;;AAMO,MAAM,cAAc;QAAC,EAAE,EAAE,EAAE,SAAS,EAAE,GAAG,OAAyB;IACvE,IAAI,OAAO,MAAM,KAAK;IACtB,MAAM,QAAQ;QACZ,yBAAyB;QACzB,qBAAqB;QACrB,gBAAgB;IAClB;IAEA,MAAM,YAAY;QAChB,qBAAqB;QACrB,yBAAyB;QACzB,gBAAgB;IAClB;IAEA,qBACE,uMAAC;QAAK,WAAW,IAAA,4IAAE,EAAC,SAAS,CAAC,GAAG,EAAE;QAAa,GAAG,KAAK;kBACrD,KAAK,CAAC,GAAG;;;;;;AAGhB;KAnBa","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///Users/calebwood/Developer/udaman/dashboard/components/series/series-list-table.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { SeriesSummary } from \"@shared/types\";\nimport { DataPoint, SeasonalAdjustment } from \"@shared/types/shared\";\nimport { dpAgeCode, uheroDate } from \"@shared/utils/time\";\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { format } from \"date-fns\";\n\nimport { cn, getColor } from \"@/lib/utils\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nimport { SAIndicator } from \"../common\";\n\ninterface DataTableProps<TData> {\n  data: TData[];\n  options?: { decimals: number };\n}\n\nexport function SeriesListTable<TData>({ data }: DataTableProps<TData>) {\n  const columns: ColumnDef<SeriesSummary>[] = [\n    {\n      accessorKey: \"name\",\n      header: () => (\n        <>\n          <span>Name</span>{\" \"}\n          <span className=\"text-xs no-underline opacity-70\">name@geo.freq</span>\n        </>\n      ),\n      cell: ({ row }) => {\n        return (\n          <Link href={`/series/${row.original.id}`}>\n            {row.getValue(\"name\")}\n          </Link>\n        );\n      },\n    },\n    {\n      accessorKey: \"seasonalAdjustment\",\n      header: \"SA\",\n      cell: ({ row }) => {\n        const sa = row.getValue(\"seasonalAdjustment\");\n        return <SAIndicator sa={sa as SeasonalAdjustment} />;\n      },\n    },\n    {\n      accessorKey: \"portalName\",\n      header: \"Portal Name\",\n    },\n    {\n      accessorKey: \"unitShortLabel\",\n      header: \"Units\",\n    },\n    {\n      accessorKey: \"minDate\",\n      header: \"First\",\n      cell: ({ row }) => {\n        const date = row.getValue(\"minDate\");\n        return format(date, \"yyyy-MM-dd\");\n      },\n    },\n    {\n      accessorKey: \"maxDate\",\n      header: \"Last\",\n      cell: ({ row }) => {\n        const date = row.getValue(\"maxDate\");\n        return format(date, \"yyyy-MM-dd\");\n      },\n    },\n    {\n      accessorKey: \"sourceDescription\",\n      header: \"Source\",\n      cell: ({ row }) => (\n        <div className=\"max-w-48 truncate\">\n          <Link href=\"#\" className=\"hover:font-medium hover:underline\">\n            {row.getValue(\"sourceDescription\")}\n          </Link>\n        </div>\n      ),\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"overflow-hidden rounded-md bg-white\">\n      <Table>\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                  </TableHead>\n                );\n              })}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row, i) => (\n              <TableRow\n                key={row.id}\n                data-state={row.getIsSelected() && \"selected\"}\n                className={i % 2 === 0 ? \"bg-muted\" : \"bg-none\"}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                No results.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport const SeriesDataTable = ({\n  data,\n  options,\n}: {\n  data: DataPoint[];\n  options: { decimals: number };\n}) => {\n  const { decimals } = options;\n  /* \n  Table needs to know about\n    - series id for link to dp vintages view: /data-points/[id]\n    - loaders (source?)\n      - to highlight dp w/ loader-color\n      - show loader # column if more than 1 loader\n  */\n  const columns: ColumnDef<DataPoint>[] = [\n    {\n      accessorKey: \"date\",\n      header: \"Date\",\n      cell: ({ row }) => uheroDate(row.getValue(\"date\")),\n    },\n    {\n      accessorKey: \"value\",\n      header: \"Value\",\n      cell: ({ cell }) => {\n        const val = cell.getValue().toFixed(decimals);\n        return <span className=\"size-full font-bold\">{val}</span>;\n      },\n    },\n    {\n      accessorKey: \"yoy\",\n      header: \"YOY\",\n      cell: ({ cell }) => {\n        const val = cell.getValue() as number;\n        const displayVal = val === null ? \"-\" : val.toFixed(1) + \"%\";\n\n        return (\n          <span\n            className={cn(\n              \"text-primary/60 w-full text-end text-xs\",\n              parseInt(val) >= 0 ? \"text-green-800\" : \"text-red-800\"\n            )}\n          >\n            {displayVal}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"ytd\",\n      header: \"YTD\",\n      cell: ({ row }) => {\n        const val = row.getValue(\"ytd\");\n        const displayVal = val === null ? \"-\" : val.toFixed(1) + \"%\";\n        return (\n          <span\n            className={cn(\n              \"text-primary/60 w-full text-end text-xs\",\n              parseInt(val) >= 0 ? \"text-green-800\" : \"text-red-800\"\n            )}\n          >\n            {displayVal}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"lvl_change\",\n      header: \"LVL\",\n      cell: ({ row }) => {\n        const val = row.getValue(\"lvl_change\");\n        const displayVal = val === null ? \"-\" : val.toFixed(1) + \"%\";\n        return (\n          <span\n            className={cn(\n              \"text-primary/60 w-full text-end text-xs\",\n              parseInt(val) >= 0 ? \"text-green-800\" : \"text-red-800\"\n            )}\n          >\n            {displayVal}\n          </span>\n        );\n      },\n    },\n    {\n      accessorKey: \"updated_at\",\n      header: \"Age\",\n      cell: ({ row }) =>\n        dpAgeCode(row.getValue(\"updated_at\"), row.getValue(\"pseudo_history\")),\n    },\n    {\n      accessorKey: \"pseudo_history\",\n      header: \"pseudo_history\",\n    },\n    {\n      accessorKey: \"color\",\n      header: \"color\",\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    initialState: {\n      columnVisibility: {\n        pseudo_history: false,\n        color: false,\n      },\n    },\n  });\n\n  return (\n    <div>\n      <Table className=\"border-separate border-spacing-1 font-mono\">\n        <TableHeader>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <TableRow key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <TableHead key={header.id} className=\"text-end\">\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </TableHead>\n              ))}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows?.length ? (\n            table.getRowModel().rows.map((row, i) => (\n              <TableRow\n                key={row.id}\n                data-state={row.getIsSelected() && \"selected\"}\n                className={cn(\"group\", i % 2 === 0 ? \"bg-muted\" : \"bg-none\")}\n              >\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell\n                    key={cell.id}\n                    className={cn(\n                      \"group-hover:bg-muted cursor-default border-b bg-white text-end\",\n                      cell.column.id === \"value\" &&\n                        getColor(cell.row.getValue(\"color\"))\n                    )}\n                  >\n                    {/* {cell.getValue() ?? \"-\"} */}\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                No data found.\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}